name: Release Extension

on:
  push:
    branches: [main]  # Automatic releases on main branch
  workflow_dispatch:  # Manual triggering

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for semantic-release
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install semantic-release
        run: |
          npm install -g semantic-release
          npm install -g @semantic-release/changelog
          npm install -g @semantic-release/git
          npm install -g @semantic-release/github
          npm install -g @semantic-release/exec

      - name: Run tests
        run: ./gradlew test

      - name: Run semantic-release
        run: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build extension (if version was bumped)
        if: env.SEMANTIC_RELEASE_NEW_RELEASE_PUBLISHED == 'true'
        run: ./gradlew bwextension

      - name: Get release info for asset upload
        if: env.SEMANTIC_RELEASE_NEW_RELEASE_PUBLISHED == 'true'
        id: release_info
        run: |
          RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ env.SEMANTIC_RELEASE_VERSION }}" \
            | jq -r '.id')
          echo "release_id=$RELEASE_ID" >> $GITHUB_OUTPUT

      - name: Upload extension to release
        if: env.SEMANTIC_RELEASE_NEW_RELEASE_PUBLISHED == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.release_info.outputs.release_id }}/assets{?name,label}
          asset_path: build/extensions/WigAI.bwextension
          asset_name: WigAI.bwextension
          asset_content_type: application/java-archive
